{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/checkout/checkout.component.css","webpack:///./app/checkout/checkout.component.html","webpack:///./app/checkout/checkout.component.ts","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./app/shop/shop.component.html","webpack:///./app/shop/shop.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from './shop/productList.component';\r\nimport { Cart } from \"./shop/cart.component\";\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./checkout/checkout.component\";\r\nimport { Login } from \"./login/login.component\";\r\n\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n\r\n\r\n\r\n\r\nlet routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    { path: \"login\", component: Login }\r\n    ];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      ProductList,\r\n      Cart,\r\n      Shop,\r\n      Checkout,\r\n      Login\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(routes, {\r\n            useHash: true,\r\n            enableTracing: false // for Debugging of the Routes\r\n        })\r\n    ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".checkout-thumb {\\r\\n    max-width: 100px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvY2hlY2tvdXQvY2hlY2tvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2NoZWNrb3V0L2NoZWNrb3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hlY2tvdXQtdGh1bWIge1xyXG4gICAgbWF4LXdpZHRoOiAxMDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n    <h3 class=\\\"text-center\\\">Confirm Order</h3>\\r\\n    <table class=\\\"table table-bordered table-hover small\\\">\\r\\n        <thead>\\r\\n            <td>Item</td>\\r\\n            <td>Quantity</td>\\r\\n            <td>Price</td>\\r\\n            <td>Total Price</td>\\r\\n        </thead>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n          <!--  <td><img src=\\\"/images/{{ o.productImage }}.jpg\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>  -->\\r\\n            <td>{{ o.productBrand }} {{ o.productModel }} {{ o.productSize }} {{o.productColor}}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice|currency:'USD':\\\"symbol\\\" }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity)|currency:'USD':\\\"symbol\\\" }}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\r\\n        <table class=\\\"table table-condensed\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"text-left\\\">Subtotal:</td>\\r\\n                <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':\\\"symbol\\\" }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-left\\\">Shipping:</td>\\r\\n                <td class=\\\"text-right\\\">$ 0.00</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-left\\\">Tax:</td>\\r\\n                <td class=\\\"text-right\\\">{{ (data.order.subtotal * .08)|currency:'USD':\\\"symbol\\\"}}</td>\\r\\n\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-left\\\"><strong>Total:</strong></td>\\r\\n                <td class=\\\"text-right\\\">{{ (data.order.subtotal * .08) + data.order.subtotal|currency:'USD':\\\"symbol\\\" }}</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n\\r\\n\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-danger float-left\\\">Back</a>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Purchase</button>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"checkout\",\r\n    templateUrl: \"checkout.component.html\",\r\n    styleUrls: ['checkout.component.css']\r\n})\r\n\r\nexport class Checkout {\r\n    constructor(public data: DataService, public router: Router) {\r\n\r\n    }\r\n    errorMessage: string = \"\";\r\n\r\n\r\n    onCheckout() {\r\n        this.data.checkout()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.router.navigate([\"/\"]);\r\n                }\r\n            }, err => this.errorMessage = \"Failed to save order\");\r\n           \r\n    }\r\n}","module.exports = \"<h3>{{ Title }}</h3>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is required!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" required #password=\\\"ngModel\\\" />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\n\r\nexport class Login {\r\n\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n\r\n    errorMessage: string = \"\";\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n       /* alert(this.creds.username);\r\n        alert(this.creds.password);\r\n        */\r\n       // this.errorMessage = \"\";\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if(this.data.order.items.length == 0) {\r\n            this.router.navigate([\"\"]);\r\n                } else {\r\n            this.router.navigate([\"checkout\"]);\r\n                }\r\n            }\r\n        }, err => this.errorMessage = \"LOGIN FAILED\");\r\n        \r\n    }\r\n}","﻿import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\"\r\nimport { map, retry } from \"rxjs/operators\";\r\nimport 'rxjs/add/operator/map';\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date = new Date();\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n        \r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n            }));\r\n    }\r\n\r\n    /*\r\n    public loadProducts(): Observable<Product[]> {\r\n        return this.http.get(\"/api/products\")\r\n            .map((result: Response) => this.products = result.json());\r\n    }\r\n    */\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    \r\n    login(creds) {\r\n        return this.http.post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((response: any) => {\r\n                    let tokenInfo = response;\r\n                    this.token = tokenInfo.token;\r\n                    this.tokenExpiration = tokenInfo.expiration;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n  /*login(creds): Observable<boolean> {\r\n        return this.http.post(\"/account/createtoken\", creds)\r\n            .map((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.expiration;\r\n                return true;\r\n            });\r\n   }\r\n  */\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString()\r\n                + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n            .map(response => {\r\n                this.order = new Order();\r\n                return true;\r\n            });\r\n    }\r\n\r\n\r\n    /* TRYING TO SWITCH CODE BC ITS NOT WORKING\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear()\r\n                .toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                }));\r\n    }\r\n*/\r\n\r\n\r\n    public AddToOrder( product : Product) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productBrand = product.productBrand;\r\n            item.productModel = product.productModel;\r\n            item.productCategory = product.category;\r\n            item.productColor = product.productColor;\r\n            item.productSize = product.productSize;\r\n            item.unitPrice = product.productPrice;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from \"lodash\";\r\n\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productBrand: string;\r\n    productModel: string;\r\n    productColor: string;\r\n    productSize: string;\r\n}\r\n\r\n","module.exports = \"\\r\\n<h4>Shopping Cart</h4>\\r\\n<div>Items: {{ data.order.items.length }}</div>\\r\\n<div>Subtotal: {{ data.order.subtotal | currency: \\\"USD\\\":true }}</div>\\r\\n\\r\\n<div class=\\\"d-sm-flex\\\">\\r\\n    <table class=\\\"table table-condensed table-striped table-sm table-hover bg-light\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <td>Product</td>\\r\\n                <td>#</td>\\r\\n                <td>$</td>\\r\\n                <td>Total</td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n                <td>{{ o.productBrand }}----{{ o.productModel }}</td>\\r\\n                <td>{{ o.quantity }}</td>\\r\\n                <td>{{ o.unitPrice | currency:\\\"USD\\\":true }}</td>\\r\\n                <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<!--The () parenthesis are for event handlers its a call back saying call OnCheckout when the event click has happened-->\\r\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\\r\\n   \\r\\n\\r\\n    \"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class Cart {\r\n\r\n    //could be public or private data. \r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force Login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            //Go to checkout\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*\r\n * If i change this.router.navatee to checkout from login it works however \r\n * It allows you to get to the checkout screen without being logged in\r\n * So Angular is not realizing that I am logged\r\n*/","module.exports = \".product-info img {\\r\\n    max-width: 70px;\\r\\n   \\r\\n    margin: 0;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-weight: bold;\\r\\n    \\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixTQUFTO0lBQ1QsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksaUJBQWlCOzs7QUFHckIiLCJmaWxlIjoiQ2xpZW50QXBwL2FwcC9zaG9wL3Byb2R1Y3RMaXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZHVjdC1pbmZvIGltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDcwcHg7XHJcbiAgIFxyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XHJcbn1cclxuXHJcbi5wcm9kdWN0LWluZm8gLnByb2R1Y3QtbmFtZSB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIFxyXG5cclxufSJdfQ== */\"","module.exports = \"\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"product-info col-md-3\\\"  *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n            <img src=\\\"/images/{{ p.productImage }}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.productImage\\\" />\\r\\n            <h6> {{ p.productBrand }} {{p.productModel }} </h6>\\r\\n            <ul class=\\\"product-props list-unstyled\\\">    \\r\\n         <!--   <div><strong>Model:</strong> {{ p.productModel }}</div>   -->\\r\\n            <li><strong>Description:</strong> {{ p.description }}</li>\\r\\n            <li><strong>Color:</strong> {{ p.productColor }}</li>\\r\\n            <li><strong>Size:</strong> {{ p.productSize }}</li>\\r\\n            <li><strong>Price:</strong> {{ p.productPrice }} </li>\\r\\n\\r\\n\\r\\n              </ul>    \\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\n\r\nexport class ProductList implements OnInit {\r\n\r\n    public products: Product[];\r\n\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    } \r\n\r\n    ngOnInit() {\r\n        this.data.loadProducts()\r\n         .subscribe(success => {\r\n             if (success) {\r\n            this.products = this.data.products;\r\n        }\r\n    });\r\n}\r\n\r\n        addProduct(product: Product) {\r\n            this.data.AddToOrder(product);\r\n        }\r\n    }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"card bg-light p-2\\\">\\r\\n            <the-cart></the-cart>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n\r\n})\r\nexport class Shop {\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}